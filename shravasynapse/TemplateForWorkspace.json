{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "shravasynapse"
		},
		"adlslink_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'adlslink'"
		},
		"shravasynapse-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'shravasynapse-WorkspaceDefaultSqlServer'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=tcp:shravasynapse.sql.azuresynapse.net,1433;Initial Catalog=@{linkedService().DBName}"
		},
		"HttpLink_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://raw.githubusercontent.com"
		},
		"adlslink_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://shravastorage1.dfs.core.windows.net/"
		},
		"shravasynapse-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://synapsestores.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/copypipeline')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "ForEachGit",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupGit",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupGit').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copyrawdata_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "httpset",
											"type": "DatasetReference",
											"parameters": {
												"p_rel_url": {
													"value": "@item().p_rel_ur",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "storageset",
											"type": "DatasetReference",
											"parameters": {
												"p_sink_folder": {
													"value": "@item().p_filepath",
													"type": "Expression"
												},
												"p_file_name": {
													"value": "@item().p_filepath_dynamic",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "LookupGit",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_para_git",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-04-16T18:13:18Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/ds_para_git')]",
				"[concat(variables('workspaceId'), '/datasets/httpset')]",
				"[concat(variables('workspaceId'), '/datasets/storageset')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ds_para_git')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adlslink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "git1.json",
						"fileSystem": "para"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"p_rel_url": {
							"type": "string"
						},
						"p_sink_folder": {
							"type": "string"
						},
						"p_file_name": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/adlslink')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/httpset')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpLink",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_rel_url": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().p_rel_url",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/HttpLink')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/storageset')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "adlslink",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_sink_folder": {
						"type": "String"
					},
					"p_file_name": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().p_file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().p_sink_folder",
							"type": "Expression"
						},
						"fileSystem": "bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/adlslink')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/HttpLink')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpLink_properties_typeProperties_url')]",
					"enableServerCertificateValidation": false,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/adlslink')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('adlslink_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('adlslink_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/shravasynapse-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('shravasynapse-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/shravasynapse-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('shravasynapse-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/external_table')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE EXTERNAL DATA SOURCE source_silver\nWITH\n(\n    LOCATION='https://shravastorage1.blob.core.windows.net/silver',\n    CREDENTIAL=synapse_cred\n)\nCREATE EXTERNAL DATA SOURCE sink_gold\nWITH\n(\n    LOCATION='https://shravastorage1.blob.core.windows.net/gold',\n    CREDENTIAL=synapse_cred\n)\n\n--Create an external file format for PARQUET files.\nCREATE EXTERNAL FILE FORMAT file_format_name\nWITH (\n         FORMAT_TYPE = PARQUET,\n         DATA_COMPRESSION ='org.apache.hadoop.io.compress.SnappyCodec'\n      \n    )\n\n --CREATE EXTERNAL TABLE OF SALES   \n\n CREATE EXTERNAL TABLE gold.extable\n WITH\n (\n    LOCATION='EXTABLE',\n    DATA_SOURCE =sink_gold,\n    FILE_FORMAT=file_format_name\n\n )\n \n AS select * from gold.Sales",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "synapses",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/master')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE MASTER KEY ENCRYPTION BY PASSWORD='Storage@12345'",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "synapses",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/read_data')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT\n*\nFROM\n    OPENROWSET(\n        BULK'https://shravastorage1.blob.core.windows.net/silver/Calendar',\n        FORMAT ='PARQUET'\n    )as query1",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "synapses",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/read_from_view')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT * FROM gold.Customer",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "synapses",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/schema')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE SCHEMA gold",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "synapses",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/scoped_cred')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE DATABASE SCOPED CREDENTIAL synapse_cred\nWITH IDENTITY = 'Managed Identity'",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "synapses",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/view')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE VIEW gold.Calendar\nAS\nSELECT\n*\nFROM\n    OPENROWSET(\n        BULK'https://shravastorage1.blob.core.windows.net/silver/Calendar/',\n        FORMAT ='PARQUET'\n    )as Q1\n\nCREATE VIEW gold.Customer\nAS\nSELECT\n*\nFROM\n    OPENROWSET(\n        BULK'https://shravastorage1.blob.core.windows.net/silver/Customer/',\n        FORMAT ='PARQUET'\n    )as Q2\n\nCREATE VIEW gold.Products\nAS\nSELECT\n*\nFROM\n    OPENROWSET(\n        BULK'https://shravastorage1.blob.core.windows.net/silver/Products/',\n        FORMAT ='PARQUET'\n    )as Q3\n\nCREATE VIEW gold.Retu\nAS\nSELECT\n*\nFROM\n    OPENROWSET(\n        BULK'https://shravastorage1.blob.core.windows.net/silver/Returns',\n        FORMAT ='PARQUET'\n    )as Q4\n\nCREATE VIEW gold.Sales \nAS\nSELECT\n*\nFROM\n    OPENROWSET(\n        BULK'https://shravastorage1.blob.core.windows.net/silver/Sales',\n        FORMAT ='PARQUET'\n    )as Q5\n\nCREATE VIEW gold.Sub\nAS\nSELECT\n*\nFROM\n    OPENROWSET(\n        BULK'https://shravastorage1.blob.core.windows.net/silver/Subcategories',\n        FORMAT ='PARQUET'\n    )as Q6\n\nCREATE VIEW gold.Ter\nAS\nSELECT\n*\nFROM\n    OPENROWSET(\n        BULK'https://shravastorage1.blob.core.windows.net/silver/Territories',\n        FORMAT ='PARQUET'\n    )as Q7\n\n        \n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "synapses",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		}
	]
}